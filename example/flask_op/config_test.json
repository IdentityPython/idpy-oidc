{
  "port": 8080,
  "domain": "127.0.0.1",
  "server_name": "{domain}:{port}",
  "base_url": "https://{domain}:{port}",
  "op": {
    "server_info": {
      "client_db": {
        "class": "idpyoidc.storage.abfile.AbstractFileSystem",
        "kwargs": {
          "fdir": "afs",
          "value_conv": "idpyoidc.util.JSON"
        }
      },
      "endpoint": {
        "provider_info": {
          "path": ".well-known/openid-configuration",
          "kwargs": {
            "client_authn_method": null
          },
          "class": "idpyoidc.server.oidc.provider_config.ProviderConfiguration"
        },
        "registration_api": {
          "path": "registration_api",
          "class": "idpyoidc.server.oidc.read_registration.RegistrationRead",
          "kwargs": {
            "client_authn_method": [
              "bearer_header"
            ]
          }
        },
        "pushed_authorization": {
          "path": "pushed_authorization",
          "class": "idpyoidc.server.oauth2.pushed_authorization.PushedAuthorization",
          "kwargs": {
            "client_authn_method": [
              "client_secret_post",
              "client_secret_basic",
              "client_secret_jwt",
              "private_key_jwt"
            ]
          }
        },
        "token_revocation": {
          "path": "revocation",
          "class": "idpyoidc.server.oauth2.token_revocation.TokenRevocation",
          "kwargs": {
            "client_authn_method": [
              "client_secret_post",
              "client_secret_basic",
              "client_secret_jwt",
              "private_key_jwt"
            ]}
        },
        "registration": {
          "path": "registration",
          "class": "idpyoidc.server.oidc.registration.Registration",
          "kwargs": {
            "client_authn_method": null,
            "client_secret_expiration_time": 432000
          }
        },
        "authorization": {
          "path": "authorization",
          "kwargs": {
            "claims_supported": [
              "sub",
              "given_name",
              "birthdate"
            ],
            "claims_parameter_supported": true,
            "scopes_supported": [
              "openid",
              "profile",
              "offline_access",
              "email"
            ],
            "response_modes_supported": [
              "query",
              "fragment",
              "form_post"
            ],
            "request_uri_parameter_supported": true,
            "client_authn_method": null,
            "check_session_iframe": "https: //127.0.0.1:8080/check_session_iframe",
            "response_types_supported": [
              "code",
              "token",
              "id_token",
              "code token",
              "code id_token",
              "id_token token",
              "code id_token token",
              "null"
            ],
            "request_parameter_supported": true
          },
          "class": "idpyoidc.server.oidc.authorization.Authorization"
        },
        "userinfo": {
          "path": "userinfo",
          "class": "idpyoidc.server.oidc.userinfo.UserInfo",
          "kwargs": {
            "claim_types_supported": [
              "normal",
              "aggregated",
              "distributed"
            ]
          }
        },
        "end_session": {
          "path": "session",
          "class": "idpyoidc.server.oidc.session.Session",
          "kwargs": {
            "logout_verify_url": "verify_logout",
            "post_logout_uri_path": "post_logout",
            "signing_alg": "RS256",
            "frontchannel_logout_supported": true,
            "frontchannel_logout_session_supported": true,
            "backchannel_logout_supported": true,
            "backchannel_logout_session_supported": true,
            "check_session_iframe": "check_session_iframe"
          }
        },
        "discovery": {
          "path": "/.well-known/oauth-authorization-server",
          "class": "idpyoidc.server.oauth2.server_metadata.ServerMetadata",
          "kwargs": {}
        },
        "webfinger": {
          "path": ".well-known/webfinger",
          "class": "idpyoidc.server.oidc.discovery.Discovery",
          "kwargs": {
            "client_authn_method": null
          }
        },
        "introspection": {
          "path": "introspection",
          "kwargs": {
            "client_authn_method": [
              "client_secret_post",
              "client_secret_basic",
              "client_secret_jwt",
              "private_key_jwt"
            ],
            "release": [
              "username"
            ]
          },
          "class": "idpyoidc.server.oauth2.introspection.Introspection"
        },
        "token": {
          "path": "token",
          "kwargs": {
            "scopes_supported": [
              "openid",
              "profile",
              "offline_access",
              "email"
            ],
            "response_types_supported": [
              "token",
              "id_token",
              "id_token token"
            ],
            "client_authn_method": [
              "client_secret_post",
              "client_secret_basic",
              "client_secret_jwt",
              "private_key_jwt"
            ]
          },
          "class": "idpyoidc.server.oauth2.token.Token"
        }
      },
      "claims_interface": {
        "class": "idpyoidc.server.session.claims.OAuth2ClaimsInterface",
        "kwargs": {}
      },
      "session_params": {
        "encrypter": {
          "kwargs": {
            "keys": {
              "key_defs": [
                {
                  "type": "OCT",
                  "use": [
                    "enc"
                  ],
                  "kid": "password"
                },
                {
                  "type": "OCT",
                  "use": [
                    "enc"
                  ],
                  "kid": "salt"
                }
              ]
            },
            "iterations": 1
          }
        }
      },
      "add_on": {
        "pkce": {
          "function": "idpyoidc.server.oauth2.add_on.pkce.add_support",
          "kwargs": {
            "essential": false,
            "code_challenge_method": "S256 S384 S512"
          }
        }
      },
      "issuer": "https://localhost:5000/",
      "key_conf": {
        "uri_path": "jwks.json",
        "key_defs": [
          {
            "type": "RSA",
            "key": "",
            "use": [
              "sig"
            ]
          },
          {
            "type": "EC",
            "crv": "P-256",
            "use": [
              "sig"
            ]
          }
        ]
      },
      "client_authn": "idpyoidc.server.client_authn.verify_client",
      "authz": {
        "kwargs": {
          "grant_config": {
            "usage_rules": {
              "access_token": {
                "supports_minting": [
                  "access_token",
                  "refresh_token"
                ],
                "expires_in": 600
              },
              "refresh_token": {
                "supports_minting": [
                  "access_token"
                ],
                "audience": [
                  "https: //example.com",
                  "https://example2.com"
                ],
                "expires_in": 43200
              },
              "authorization_code": {
                "expires_in": 300,
                "supports_minting": [
                  "access_token",
                  "refresh_token",
                  "id_token"
                ],
                "max_usage": 1
              }
            },
            "expires_in": 43200
          }
        },
        "class": "idpyoidc.server.authz.AuthzHandling"
      },
      "keys": {
        "key_defs": [
          {
            "use": [
              "sig"
            ],
            "type": "RSA",
            "key": ""
          },
          {
            "use": [
              "sig"
            ],
            "type": "EC",
            "crv": "P-256"
          }
        ],
        "public_path": "static/jwks.json",
        "read_only": false,
        "private_path": "private/jwks.json",
        "uri_path": "static/jwks.json"
      },
      "userinfo": {
        "kwargs": {
          "db_file": "users.json"
        },
        "class": "idpyoidc.server.user_info.UserInfo"
      },
      "login_hint2acrs": {
        "class": "idpyoidc.server.login_hint.LoginHint2Acrs",
        "kwargs": {
          "scheme_map": {
            "email": [
              "urn:oasis:names:tc:SAML: 2.0:ac:classes:InternetProtocolPassword"
            ]
          }
        }
      },
      "subject_types_supported": [
        "public",
        "pairwise",
        "ephemeral"
      ],
      "template_dir": "templates",
      "token_handler_args": {
        "code": {
          "lifetime": 600,
          "kwargs": {
            "lifetime": 600,
            "crypt_conf": {
              "kwargs": {
                "keys": {
                  "key_defs": [
                    {
                      "type": "OCT",
                      "use": [
                        "enc"
                      ],
                      "kid": "password"
                    },
                    {
                      "type": "OCT",
                      "use": [
                        "enc"
                      ],
                      "kid": "salt"
                    }
                  ]
                },
                "iterations": 1
              }
            }
          }
        },
        "refresh": {
          "class": "idpyoidc.server.token.jwt_token.JWTToken",
          "kwargs": {
            "lifetime": 3600,
            "aud": [
              "https://example.org/appl"
            ]
          }
        },
        "key_conf": {
          "key_defs": [
            {
              "type": "RSA",
              "key": "",
              "use": [
                "sig"
              ]
            },
            {
              "type": "EC",
              "crv": "P-256",
              "use": [
                "sig"
              ]
            }
          ]
        },
        "jwks_file": "private/token_jwks.json",
        "id_token": {
          "kwargs": {
            "base_claims": {
              "email": null,
              "email_verified": null
            },
            "add_claims_by_scope": true,
            "lifetime": 86400
          },
          "class": "idpyoidc.server.token.id_token.IDToken"
        },
        "token": {
          "kwargs": {
            "add_claims_by_scope": true,
            "add_claims": [
              "email",
              "email_verified",
              "phone_number",
              "phone_number_verified"
            ],
            "aud": [
              "https: //localhost:8080/",
              "https://example.org/appl"
            ],
            "lifetime": 3600
          },
          "class": "idpyoidc.server.token.jwt_token.JWTToken"
        }
      },
      "authentication": {
        "user": {
          "acr": "urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword",
          "class": "idpyoidc.server.user_authn.user.UserPassJinja2",
          "kwargs": {
            "verify_endpoint": "/verify/user",
            "template": "user_pass.jinja2",
            "db": {
              "class": "idpyoidc.server.util.JSONDictDB",
              "kwargs": {
                "filename": "passwd.json"
              }
            },
            "page_header": "GSMA Open Gateway Login",
            "submit_btn": "Sign In",
            "user_label": "ID/email",
            "passwd_label": "Password"
          }
        }
      },
      "add_ons": {
        "pkce": {
          "function": "idpyoidc.server.oauth2.add_on.pkce.add_support",
          "kwargs": {}
        },
        "dpop": {
          "function": "idpyoidc.server.oauth2.add_on.dpop.add_support",
          "kwargs": {
            "dpop_signing_alg_values_supported": [
              "RS256",
              "RS384",
              "RS512",
              "ES256",
              "ES384",
              "ES512",
              "PS256",
              "PS384",
              "PS512",
              "HS256",
              "HS384",
              "HS512"
            ]
          }
        }
      },
      "httpc_params": {
        "verify": false,
        "timeout": 4
      },
      "capabilities": {
        "subject_types_supported": [
          "public",
          "pairwise",
          "ephemeral"
        ],
        "grant_types_supported": [
          "client_credentials",
          "password",
          "authorization_code",
          "implicit",
          "urn:ietf:params:oauth:grant-type:jwt-bearer",
          "refresh_token"
        ],
        "request_object_signing_alg_values_supported": [
          "RS256",
          "RS384",
          "RS512",
          "ES256",
          "ES384",
          "ES512",
          "HS256",
          "HS384",
          "HS512",
          "PS256",
          "PS384",
          "PS512"
        ]
      },
      "cookie_handler": {
        "class": "idpyoidc.server.cookie_handler.CookieHandler",
        "kwargs": {
          "keys": {
            "private_path": "private/cookie_jwks.json",
            "key_defs": [
              {
                "type": "OCT",
                "use": [
                  "enc"
                ],
                "kid": "enc"
              },
              {
                "type": "OCT",
                "use": [
                  "sig"
                ],
                "kid": "sig"
              }
            ],
            "read_only": false
          },
          "name": {
            "session": "oidc_op",
            "register": "oidc_op_rp",
            "session_management": "sman"
          }
        }
      }
    }
  },
  "webserver": {
    "server_cert": "certs/client.crt",
    "server_key": "certs/client.key",
    "ca_bundle": null,
    "verify_user": false,
    "port": 8080,
    "domain": "127.0.0.1",
    "debug": true
  }
}